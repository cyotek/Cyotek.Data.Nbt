<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="..\Cyotek.Data.Nbt\NbtGeneratorData.t4" #>using System;
using NUnit.Framework;

namespace Cyotek.Data.Nbt.Tests
{
  partial class TagTests
  {
<# for(var i = 0; i < netTypeNames.Length; i++)
   {
     string name;
     string nbtName;
     string tagName;
     object testValue;

     name = netTypeNames[i];
     nbtName = nbtTypeNames[i];
     tagName = nbtTagTypeNames[i];
     testValue = testValues[i];

     if(name != null)
     {
#>
    [Test]
    public void SetValue_updates_<#=nbtName.ToLower()#>_value()
    {
      // arrange
      Tag target;
      <#=name#> expected;
      <#=name#> actual;

      target = new Tag<#=nbtName#>();

      expected = <#=testValue#>;

      // act
      target.SetValue(expected);

      // assert
      actual = ((Tag<#=nbtName#>)target).Value;
      Assert.AreEqual(expected, actual);
    }

    [Test]
    public void GetValue_retrieves_<#=nbtName.ToLower()#>_value()
    {
      // arrange
      Tag target;
      <#=name#> expected;
      object actual;

      expected = <#=testValue#>;

      target = TagFactory.CreateTag(expected);

      // act
      actual = target.GetValue();

      // assert
      Assert.AreEqual(expected, actual);
    }

<#
    }
  }
#>
  }
}
